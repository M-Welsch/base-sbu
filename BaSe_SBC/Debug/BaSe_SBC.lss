
BaSe_SBC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  00000c1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000026  00008b62  00000b62  00000bf6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000048  00803e00  00803e00  00000c1c  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000c1c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c78  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000208  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004169  00000000  00000000  00000ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001e45  00000000  00000000  00005025  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000010ff  00000000  00000000  00006e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000488  00000000  00000000  00007f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000015f8  00000000  00000000  000083f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000e1f  00000000  00000000  000099ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a8  00000000  00000000  0000a80b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	a0 c0       	rjmp	.+320    	; 0x148 <__vector_3>
   8:	c7 c0       	rjmp	.+398    	; 0x198 <__vector_4>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	4d c1       	rjmp	.+666    	; 0x2b0 <__vector_10>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>
  1e:	1a c0       	rjmp	.+52     	; 0x54 <__bad_interrupt>
  20:	19 c0       	rjmp	.+50     	; 0x54 <__bad_interrupt>
  22:	18 c0       	rjmp	.+48     	; 0x54 <__bad_interrupt>
  24:	17 c0       	rjmp	.+46     	; 0x54 <__bad_interrupt>
  26:	16 c0       	rjmp	.+44     	; 0x54 <__bad_interrupt>
  28:	15 c0       	rjmp	.+42     	; 0x54 <__bad_interrupt>
  2a:	14 c0       	rjmp	.+40     	; 0x54 <__bad_interrupt>
  2c:	9c c2       	rjmp	.+1336   	; 0x566 <__vector_22>
  2e:	12 c0       	rjmp	.+36     	; 0x54 <__bad_interrupt>
  30:	11 c0       	rjmp	.+34     	; 0x54 <__bad_interrupt>
  32:	10 c0       	rjmp	.+32     	; 0x54 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_clear_bss>:
  40:	2e e3       	ldi	r18, 0x3E	; 62
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	be e3       	ldi	r27, 0x3E	; 62
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a8 34       	cpi	r26, 0x48	; 72
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	3b d1       	rcall	.+630    	; 0x2c8 <main>
  52:	85 c5       	rjmp	.+2826   	; 0xb5e <_exit>

00000054 <__bad_interrupt>:
  54:	bd c0       	rjmp	.+378    	; 0x1d0 <__vector_default>

00000056 <init_flags>:
 */ 
#include <stdbool.h>
#include "flags.h"

void init_flags(void) {
	flag_button_0_pressed = false;	
  56:	10 92 05 3e 	sts	0x3E05, r1	; 0x803e05 <flag_button_0_pressed>
	flag_heartbeat = false;
  5a:	10 92 04 3e 	sts	0x3E04, r1	; 0x803e04 <flag_heartbeat>
  5e:	08 95       	ret

00000060 <init_pins>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  60:	e0 e0       	ldi	r30, 0x00	; 0
  62:	f4 e0       	ldi	r31, 0x04	; 4
  64:	80 e8       	ldi	r24, 0x80	; 128
  66:	86 83       	std	Z+6, r24	; 0x06
  68:	81 83       	std	Z+1, r24	; 0x01
  6a:	80 e4       	ldi	r24, 0x40	; 64
  6c:	81 83       	std	Z+1, r24	; 0x01
  6e:	80 e1       	ldi	r24, 0x10	; 16
  70:	85 83       	std	Z+5, r24	; 0x05
  72:	81 83       	std	Z+1, r24	; 0x01
  74:	8c e0       	ldi	r24, 0x0C	; 12
  76:	82 83       	std	Z+2, r24	; 0x02
  78:	82 89       	ldd	r24, Z+18	; 0x12
  7a:	88 60       	ori	r24, 0x08	; 8
  7c:	82 8b       	std	Z+18, r24	; 0x12
  7e:	83 89       	ldd	r24, Z+19	; 0x13
  80:	88 60       	ori	r24, 0x08	; 8
  82:	83 8b       	std	Z+19, r24	; 0x13
  84:	e0 e2       	ldi	r30, 0x20	; 32
  86:	f4 e0       	ldi	r31, 0x04	; 4
  88:	83 e1       	ldi	r24, 0x13	; 19
  8a:	81 83       	std	Z+1, r24	; 0x01
  8c:	80 e2       	ldi	r24, 0x20	; 32
  8e:	82 83       	std	Z+2, r24	; 0x02
  90:	e0 e4       	ldi	r30, 0x40	; 64
  92:	f4 e0       	ldi	r31, 0x04	; 4
  94:	8f e0       	ldi	r24, 0x0F	; 15
  96:	81 83       	std	Z+1, r24	; 0x01
  98:	15 82       	std	Z+5, r1	; 0x05
  9a:	08 95       	ret

0000009c <button_1_pressed>:
  9c:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x700408>
  a0:	86 95       	lsr	r24
  a2:	86 95       	lsr	r24
  a4:	86 95       	lsr	r24
  a6:	91 e0       	ldi	r25, 0x01	; 1
  a8:	89 27       	eor	r24, r25
  aa:	81 70       	andi	r24, 0x01	; 1
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	08 95       	ret

000000b0 <set_interrupts_for_buttons>:
  b0:	e0 e0       	ldi	r30, 0x00	; 0
  b2:	f4 e0       	ldi	r31, 0x04	; 4
  b4:	82 89       	ldd	r24, Z+18	; 0x12
  b6:	83 60       	ori	r24, 0x03	; 3
  b8:	82 8b       	std	Z+18, r24	; 0x12
  ba:	83 89       	ldd	r24, Z+19	; 0x13
  bc:	83 60       	ori	r24, 0x03	; 3
  be:	83 8b       	std	Z+19, r24	; 0x13
  c0:	08 95       	ret

000000c2 <led_hmi_off>:
  c2:	80 e1       	ldi	r24, 0x10	; 16
  c4:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x700426>
  c8:	08 95       	ret

000000ca <toggle_hmi_led>:
  ca:	80 e1       	ldi	r24, 0x10	; 16
  cc:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <__TEXT_REGION_LENGTH__+0x700427>
  d0:	08 95       	ret

000000d2 <dim_display>:
  d2:	18 16       	cp	r1, r24
  d4:	19 06       	cpc	r1, r25
  d6:	24 f4       	brge	.+8      	; 0xe0 <dim_display+0xe>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x700425>
  de:	08 95       	ret
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x700426>
  e6:	08 95       	ret

000000e8 <display_enable>:
  e8:	e0 e0       	ldi	r30, 0x00	; 0
  ea:	f4 e0       	ldi	r31, 0x04	; 4
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	85 83       	std	Z+5, r24	; 0x05
  f0:	92 e4       	ldi	r25, 0x42	; 66
  f2:	9a 95       	dec	r25
  f4:	f1 f7       	brne	.-4      	; 0xf2 <display_enable+0xa>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <display_enable+0x10>
  f8:	86 83       	std	Z+6, r24	; 0x06
  fa:	82 e4       	ldi	r24, 0x42	; 66
  fc:	8a 95       	dec	r24
  fe:	f1 f7       	brne	.-4      	; 0xfc <display_enable+0x14>
 100:	00 c0       	rjmp	.+0      	; 0x102 <display_enable+0x1a>
 102:	08 95       	ret

00000104 <set_display_data_pins>:
 104:	e0 e4       	ldi	r30, 0x40	; 64
 106:	f4 e0       	ldi	r31, 0x04	; 4
 108:	94 81       	ldd	r25, Z+4	; 0x04
 10a:	90 7f       	andi	r25, 0xF0	; 240
 10c:	94 83       	std	Z+4, r25	; 0x04
 10e:	94 81       	ldd	r25, Z+4	; 0x04
 110:	8f 70       	andi	r24, 0x0F	; 15
 112:	98 2b       	or	r25, r24
 114:	94 83       	std	Z+4, r25	; 0x04
 116:	08 95       	ret

00000118 <display_set_rs_pin>:
	display_clear_rs_pin();
	_delay_ms(10);
}

void display_set_rs_pin(void) {
	dis_rs_port.OUTSET = dis_rs;
 118:	80 e4       	ldi	r24, 0x40	; 64
 11a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
 11e:	08 95       	ret

00000120 <display_clear_rs_pin>:
}

void display_clear_rs_pin(void) {
	dis_rs_port.OUTCLR = dis_rs;
 120:	80 e4       	ldi	r24, 0x40	; 64
 122:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
 126:	08 95       	ret

00000128 <set_pb2_txd_and_pb3_rxd>:
}

/* USART */
void set_pb2_txd_and_pb3_rxd(void) {
	PORTB.OUTSET = PIN2_bm;
 128:	e0 e2       	ldi	r30, 0x20	; 32
 12a:	f4 e0       	ldi	r31, 0x04	; 4
 12c:	84 e0       	ldi	r24, 0x04	; 4
 12e:	85 83       	std	Z+5, r24	; 0x05
	PORTB.DIRSET = PIN2_bm;
 130:	81 83       	std	Z+1, r24	; 0x01
 132:	08 95       	ret

00000134 <disable_usart_tx>:
}

void disable_usart_tx(void) {
	PORTB.OUTCLR = PIN2_bm;
 134:	84 e0       	ldi	r24, 0x04	; 4
 136:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x700426>
 13a:	08 95       	ret

0000013c <setup_interrupt_for_hb_edge_detection>:
}

/* Heartbeat */
void setup_interrupt_for_hb_edge_detection(void) {
	bpi_heartbeat_port.bpi_heartbeat_ctrl |= PORT_PULLUPEN_bm | PORT_ISC_BOTHEDGES_gc;
 13c:	e0 e2       	ldi	r30, 0x20	; 32
 13e:	f4 e0       	ldi	r31, 0x04	; 4
 140:	85 89       	ldd	r24, Z+21	; 0x15
 142:	89 60       	ori	r24, 0x09	; 9
 144:	85 8b       	std	Z+21, r24	; 0x15
 146:	08 95       	ret

00000148 <__vector_3>:
}

/* Interrupt Service Routines regarding pin interrupts */

ISR(PORTA_PORT_vect)
{
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	8f 93       	push	r24
 154:	ef 93       	push	r30
 156:	ff 93       	push	r31
	/* Writing something to display here freezes the MCU. Perhaps because the ISR will be called over and over again. */
	/* EDIT: still true?? */
	if(PORTA_INTFLAGS & button_0) {
 158:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x700409>
 15c:	82 ff       	sbrs	r24, 2
 15e:	08 c0       	rjmp	.+16     	; 0x170 <__vector_3+0x28>
		flag_button_0_pressed = true;
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	80 93 05 3e 	sts	0x3E05, r24	; 0x803e05 <flag_button_0_pressed>
		PORTA_INTFLAGS &= button_0;
 166:	e9 e0       	ldi	r30, 0x09	; 9
 168:	f4 e0       	ldi	r31, 0x04	; 4
 16a:	80 81       	ld	r24, Z
 16c:	84 70       	andi	r24, 0x04	; 4
 16e:	80 83       	st	Z, r24
	}
	
	if(PORTA_INTFLAGS & button_1) {
 170:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x700409>
 174:	83 ff       	sbrs	r24, 3
 176:	08 c0       	rjmp	.+16     	; 0x188 <__vector_3+0x40>
		flag_button_1_pressed = true;
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	80 93 01 3e 	sts	0x3E01, r24	; 0x803e01 <flag_button_1_pressed>
		PORTA_INTFLAGS &= button_1;
 17e:	e9 e0       	ldi	r30, 0x09	; 9
 180:	f4 e0       	ldi	r31, 0x04	; 4
 182:	80 81       	ld	r24, Z
 184:	88 70       	andi	r24, 0x08	; 8
 186:	80 83       	st	Z, r24
	}
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	8f 91       	pop	r24
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <__vector_4>:

ISR(PORTB_PORT_vect)
{
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	8f 93       	push	r24
 1a4:	ef 93       	push	r30
 1a6:	ff 93       	push	r31
	/* Writing something to display here freezes the MCU. Perhaps because the ISR will be called over and over again. */
	if(PORTB_INTFLAGS & bpi_heartbeat) {
 1a8:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <__TEXT_REGION_LENGTH__+0x700429>
 1ac:	85 ff       	sbrs	r24, 5
 1ae:	08 c0       	rjmp	.+16     	; 0x1c0 <__vector_4+0x28>
		flag_heartbeat = true;
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	80 93 04 3e 	sts	0x3E04, r24	; 0x803e04 <flag_heartbeat>
		PORTB_INTFLAGS &= bpi_heartbeat;
 1b6:	e9 e2       	ldi	r30, 0x29	; 41
 1b8:	f4 e0       	ldi	r31, 0x04	; 4
 1ba:	80 81       	ld	r24, Z
 1bc:	80 72       	andi	r24, 0x20	; 32
 1be:	80 83       	st	Z, r24
		/* reset timer. This has to be done within the ISR to avoid false timeouts due to the slowness of the mainloop */
	}
}
 1c0:	ff 91       	pop	r31
 1c2:	ef 91       	pop	r30
 1c4:	8f 91       	pop	r24
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

000001d0 <__vector_default>:

ISR(BADISR_vect)
{
 1d0:	1f 92       	push	r1
 1d2:	0f 92       	push	r0
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	0f 92       	push	r0
 1d8:	11 24       	eor	r1, r1
 1da:	2f 93       	push	r18
 1dc:	8f 93       	push	r24
 1de:	9f 93       	push	r25
 1e0:	af 93       	push	r26
 1e2:	bf 93       	push	r27
 1e4:	ef 93       	push	r30
 1e6:	ff 93       	push	r31
 1e8:	84 e1       	ldi	r24, 0x14	; 20
 1ea:	90 e0       	ldi	r25, 0x00	; 0
}

/* HMI LED */

void led_hmi_on(void) {
	PORTB.OUTSET = led_hmi;
 1ec:	e0 e2       	ldi	r30, 0x20	; 32
 1ee:	f4 e0       	ldi	r31, 0x04	; 4
 1f0:	20 e1       	ldi	r18, 0x10	; 16
 1f2:	25 83       	std	Z+5, r18	; 0x05
 1f4:	af e4       	ldi	r26, 0x4F	; 79
 1f6:	b3 ec       	ldi	r27, 0xC3	; 195
 1f8:	11 97       	sbiw	r26, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <__vector_default+0x28>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <__vector_default+0x2e>
 1fe:	00 00       	nop
}

void led_hmi_off(void) {
	PORTB.OUTCLR = led_hmi;
 200:	26 83       	std	Z+6, r18	; 0x06
 202:	af e4       	ldi	r26, 0x4F	; 79
 204:	b3 ec       	ldi	r27, 0xC3	; 195
 206:	11 97       	sbiw	r26, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <__vector_default+0x36>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <__vector_default+0x3c>
 20c:	00 00       	nop
 20e:	01 97       	sbiw	r24, 0x01	; 1
}

ISR(BADISR_vect)
{
	/* This routine is called if a non defined interrupt-vector is requested. It flashes the HMI_LED real fast */
	for(int i = 0; i < 20; i++)
 210:	81 f7       	brne	.-32     	; 0x1f2 <__vector_default+0x22>
		led_hmi_on();
		_delay_ms(10);
		led_hmi_off();
		_delay_ms(10);	
	}
 212:	ff 91       	pop	r31
 214:	ef 91       	pop	r30
 216:	bf 91       	pop	r27
 218:	af 91       	pop	r26
 21a:	9f 91       	pop	r25
 21c:	8f 91       	pop	r24
 21e:	2f 91       	pop	r18
 220:	0f 90       	pop	r0
 222:	0f be       	out	0x3f, r0	; 63
 224:	0f 90       	pop	r0
 226:	1f 90       	pop	r1
 228:	18 95       	reti

0000022a <setup_interrupt_timeout_detection>:
		reset_bpi_hb_timeout_timer();
		flag_heartbeat = false;
	}
}

void reset_bpi_hb_timeout_timer() {
 22a:	e0 e0       	ldi	r30, 0x00	; 0
 22c:	fa e0       	ldi	r31, 0x0A	; 10
 22e:	8b e2       	ldi	r24, 0x2B	; 43
 230:	9a e0       	ldi	r25, 0x0A	; 10
 232:	86 a3       	std	Z+38, r24	; 0x26
 234:	97 a3       	std	Z+39, r25	; 0x27
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	82 87       	std	Z+10, r24	; 0x0a
 23a:	08 95       	ret

0000023c <init_heatbeat_monitor>:
 23c:	7f df       	rcall	.-258    	; 0x13c <setup_interrupt_for_hb_edge_detection>
 23e:	f5 df       	rcall	.-22     	; 0x22a <setup_interrupt_timeout_detection>
 240:	08 95       	ret

00000242 <heartbeat_monitor>:
 242:	80 91 04 3e 	lds	r24, 0x3E04	; 0x803e04 <flag_heartbeat>
 246:	81 11       	cpse	r24, r1
 248:	10 92 04 3e 	sts	0x3E04, r1	; 0x803e04 <flag_heartbeat>
 24c:	08 95       	ret

0000024e <get_sbc_heartbeat_count>:
	USART0_sendString_w_eol(buffer);
}

int get_sbc_heartbeat_count() {
	return heartbeat_count;
}
 24e:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <heartbeat_count>
 252:	90 91 03 3e 	lds	r25, 0x3E03	; 0x803e03 <heartbeat_count+0x1>
 256:	08 95       	ret

00000258 <increment_or_reset_sbc_heartbeat_count>:

int increment_or_reset_sbc_heartbeat_count() {
	if (heartbeat_count == 255) {
 258:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <heartbeat_count>
 25c:	90 91 03 3e 	lds	r25, 0x3E03	; 0x803e03 <heartbeat_count+0x1>
 260:	8f 3f       	cpi	r24, 0xFF	; 255
 262:	91 05       	cpc	r25, r1
 264:	29 f4       	brne	.+10     	; 0x270 <increment_or_reset_sbc_heartbeat_count+0x18>
		heartbeat_count = 0;
 266:	10 92 02 3e 	sts	0x3E02, r1	; 0x803e02 <heartbeat_count>
 26a:	10 92 03 3e 	sts	0x3E03, r1	; 0x803e03 <heartbeat_count+0x1>
 26e:	05 c0       	rjmp	.+10     	; 0x27a <increment_or_reset_sbc_heartbeat_count+0x22>
	} else {
		heartbeat_count++;
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	80 93 02 3e 	sts	0x3E02, r24	; 0x803e02 <heartbeat_count>
 276:	90 93 03 3e 	sts	0x3E03, r25	; 0x803e03 <heartbeat_count+0x1>
	}
	return heartbeat_count;
}
 27a:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <heartbeat_count>
 27e:	90 91 03 3e 	lds	r25, 0x3E03	; 0x803e03 <heartbeat_count+0x1>
 282:	08 95       	ret

00000284 <send_sbc_heartbeat_count_to_bpi>:
void reset_bpi_hb_timeout_timer() {
	;
}

void send_sbc_heartbeat_count_to_bpi() {
	sprintf(buffer, "H:%i", increment_or_reset_sbc_heartbeat_count());
 284:	e9 df       	rcall	.-46     	; 0x258 <increment_or_reset_sbc_heartbeat_count>
 286:	9f 93       	push	r25
 288:	8f 93       	push	r24
 28a:	82 e6       	ldi	r24, 0x62	; 98
 28c:	9b e8       	ldi	r25, 0x8B	; 139
 28e:	9f 93       	push	r25
 290:	8f 93       	push	r24
 292:	87 e0       	ldi	r24, 0x07	; 7
 294:	9e e3       	ldi	r25, 0x3E	; 62
 296:	9f 93       	push	r25
 298:	8f 93       	push	r24
 29a:	8f d1       	rcall	.+798    	; 0x5ba <sprintf>
	USART0_sendString_w_eol(buffer);
 29c:	87 e0       	ldi	r24, 0x07	; 7
 29e:	9e e3       	ldi	r25, 0x3E	; 62
 2a0:	56 d1       	rcall	.+684    	; 0x54e <USART0_sendString_w_eol>
}
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	0f 90       	pop	r0
 2aa:	0f 90       	pop	r0
 2ac:	0f 90       	pop	r0
 2ae:	08 95       	ret

000002b0 <__vector_10>:
		heartbeat_count++;
	}
	return heartbeat_count;
}

ISR(TCA0_CMP0_vect) {
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
	flag_bpi_heartbeat_ok = false;
 2ba:	10 92 00 3e 	sts	0x3E00, r1	; 0x803e00 <_edata>
 2be:	0f 90       	pop	r0
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	0f 90       	pop	r0
 2c4:	1f 90       	pop	r1
 2c6:	18 95       	reti

000002c8 <main>:
#include "heartbeat.h"


int main(void)
{
	init_flags();
 2c8:	c6 de       	rcall	.-628    	; 0x56 <init_flags>
	init_pins();
 2ca:	ca de       	rcall	.-620    	; 0x60 <init_pins>
	init_heatbeat_monitor();
 2cc:	b7 df       	rcall	.-146    	; 0x23c <init_heatbeat_monitor>
	set_interrupts_for_buttons();
 2ce:	f0 de       	rcall	.-544    	; 0xb0 <set_interrupts_for_buttons>
	init_uart();
 2d0:	0a d1       	rcall	.+532    	; 0x4e6 <init_uart>
	init_display();
 2d2:	3e d0       	rcall	.+124    	; 0x350 <init_display>
	sei();
 2d4:	78 94       	sei
	
	dim_display(1);
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	fb de       	rcall	.-522    	; 0xd2 <dim_display>
	display_write_string("Hallo Welt!\n");
 2dc:	87 e6       	ldi	r24, 0x67	; 103
 2de:	9b e8       	ldi	r25, 0x8B	; 139
 2e0:	dd d0       	rcall	.+442    	; 0x49c <display_write_string>
	USART0_sendString("I:STARTED");
 2e2:	84 e7       	ldi	r24, 0x74	; 116
 2e4:	9b e8       	ldi	r25, 0x8B	; 139
 2e6:	12 d1       	rcall	.+548    	; 0x50c <USART0_sendString>
		/* let hmi led toggle as a sbc heartbeat */
		
		_delay_ms(100);		
		toggle_hmi_led();
		send_sbc_heartbeat_count_to_bpi();
		sprintf(buffer, "H:%i", get_sbc_heartbeat_count());
 2e8:	02 e6       	ldi	r16, 0x62	; 98
 2ea:	1b e8       	ldi	r17, 0x8B	; 139
 2ec:	c7 e0       	ldi	r28, 0x07	; 7
 2ee:	de e3       	ldi	r29, 0x3E	; 62
	display_write_string("Hallo Welt!\n");
	USART0_sendString("I:STARTED");
	
    while (1) 
    {
		heartbeat_monitor();
 2f0:	a8 df       	rcall	.-176    	; 0x242 <heartbeat_monitor>
		if(!flag_bpi_heartbeat_ok) {
 2f2:	80 91 00 3e 	lds	r24, 0x3E00	; 0x803e00 <_edata>
 2f6:	81 11       	cpse	r24, r1
 2f8:	01 c0       	rjmp	.+2      	; 0x2fc <main+0x34>
			/* if heartbeat from bpi is missing, stop loading it with a high-level voltage on its rx-pin! */
			disable_usart_tx();
 2fa:	1c df       	rcall	.-456    	; 0x134 <disable_usart_tx>
		}
		
		if (flag_button_0_pressed == true) {
 2fc:	80 91 05 3e 	lds	r24, 0x3E05	; 0x803e05 <flag_button_0_pressed>
 300:	88 23       	and	r24, r24
 302:	19 f0       	breq	.+6      	; 0x30a <main+0x42>
			led_hmi_off();
 304:	de de       	rcall	.-580    	; 0xc2 <led_hmi_off>
			flag_button_0_pressed = false;
 306:	10 92 05 3e 	sts	0x3E05, r1	; 0x803e05 <flag_button_0_pressed>
		}
		if (button_1_pressed() == 1) {
 30a:	c8 de       	rcall	.-624    	; 0x9c <button_1_pressed>
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	19 f4       	brne	.+6      	; 0x316 <main+0x4e>
			USART0_sendString("C:Hello\r\n");
 310:	8e e7       	ldi	r24, 0x7E	; 126
 312:	9b e8       	ldi	r25, 0x8B	; 139
 314:	fb d0       	rcall	.+502    	; 0x50c <USART0_sendString>
 316:	2f ef       	ldi	r18, 0xFF	; 255
 318:	80 e7       	ldi	r24, 0x70	; 112
 31a:	92 e0       	ldi	r25, 0x02	; 2
 31c:	21 50       	subi	r18, 0x01	; 1
 31e:	80 40       	sbci	r24, 0x00	; 0
 320:	90 40       	sbci	r25, 0x00	; 0
 322:	e1 f7       	brne	.-8      	; 0x31c <main+0x54>
 324:	00 c0       	rjmp	.+0      	; 0x326 <main+0x5e>
 326:	00 00       	nop
		}
		
		/* let hmi led toggle as a sbc heartbeat */
		
		_delay_ms(100);		
		toggle_hmi_led();
 328:	d0 de       	rcall	.-608    	; 0xca <toggle_hmi_led>
		send_sbc_heartbeat_count_to_bpi();
 32a:	ac df       	rcall	.-168    	; 0x284 <send_sbc_heartbeat_count_to_bpi>
		sprintf(buffer, "H:%i", get_sbc_heartbeat_count());
 32c:	90 df       	rcall	.-224    	; 0x24e <get_sbc_heartbeat_count>
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	1f 93       	push	r17
 334:	0f 93       	push	r16
 336:	df 93       	push	r29
 338:	cf 93       	push	r28
 33a:	3f d1       	rcall	.+638    	; 0x5ba <sprintf>
		display_clear();
 33c:	be d0       	rcall	.+380    	; 0x4ba <display_clear>
		display_write_string(buffer);
 33e:	ce 01       	movw	r24, r28
 340:	ad d0       	rcall	.+346    	; 0x49c <display_write_string>
    }
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	d0 cf       	rjmp	.-96     	; 0x2f0 <main+0x28>

00000350 <init_display>:
 350:	2f e7       	ldi	r18, 0x7F	; 127
 352:	8a e1       	ldi	r24, 0x1A	; 26
 354:	96 e0       	ldi	r25, 0x06	; 6
 356:	21 50       	subi	r18, 0x01	; 1
 358:	80 40       	sbci	r24, 0x00	; 0
 35a:	90 40       	sbci	r25, 0x00	; 0
 35c:	e1 f7       	brne	.-8      	; 0x356 <init_display+0x6>
 35e:	00 c0       	rjmp	.+0      	; 0x360 <init_display+0x10>
 360:	00 00       	nop
 362:	de de       	rcall	.-580    	; 0x120 <display_clear_rs_pin>
 364:	83 e0       	ldi	r24, 0x03	; 3
 366:	ce de       	rcall	.-612    	; 0x104 <set_display_data_pins>
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	be de       	rcall	.-644    	; 0xe8 <display_enable>
 36c:	87 e8       	ldi	r24, 0x87	; 135
 36e:	93 e1       	ldi	r25, 0x13	; 19
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <init_display+0x20>
 374:	00 c0       	rjmp	.+0      	; 0x376 <init_display+0x26>
 376:	00 00       	nop
 378:	83 e0       	ldi	r24, 0x03	; 3
 37a:	c4 de       	rcall	.-632    	; 0x104 <set_display_data_pins>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	b4 de       	rcall	.-664    	; 0xe8 <display_enable>
 380:	87 e8       	ldi	r24, 0x87	; 135
 382:	93 e1       	ldi	r25, 0x13	; 19
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <init_display+0x34>
 388:	00 c0       	rjmp	.+0      	; 0x38a <init_display+0x3a>
 38a:	00 00       	nop
 38c:	83 e0       	ldi	r24, 0x03	; 3
 38e:	ba de       	rcall	.-652    	; 0x104 <set_display_data_pins>
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	aa de       	rcall	.-684    	; 0xe8 <display_enable>
 394:	87 e8       	ldi	r24, 0x87	; 135
 396:	93 e1       	ldi	r25, 0x13	; 19
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <init_display+0x48>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <init_display+0x4e>
 39e:	00 00       	nop
 3a0:	82 e0       	ldi	r24, 0x02	; 2
 3a2:	b0 de       	rcall	.-672    	; 0x104 <set_display_data_pins>
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	a0 de       	rcall	.-704    	; 0xe8 <display_enable>
 3a8:	87 e8       	ldi	r24, 0x87	; 135
 3aa:	93 e1       	ldi	r25, 0x13	; 19
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <init_display+0x5c>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <init_display+0x62>
 3b2:	00 00       	nop
 3b4:	82 e0       	ldi	r24, 0x02	; 2
 3b6:	a6 de       	rcall	.-692    	; 0x104 <set_display_data_pins>
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	96 de       	rcall	.-724    	; 0xe8 <display_enable>
 3bc:	87 e8       	ldi	r24, 0x87	; 135
 3be:	93 e1       	ldi	r25, 0x13	; 19
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	f1 f7       	brne	.-4      	; 0x3c0 <init_display+0x70>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <init_display+0x76>
 3c6:	00 00       	nop
 3c8:	88 e0       	ldi	r24, 0x08	; 8
 3ca:	9c de       	rcall	.-712    	; 0x104 <set_display_data_pins>
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	8c de       	rcall	.-744    	; 0xe8 <display_enable>
 3d0:	87 e8       	ldi	r24, 0x87	; 135
 3d2:	93 e1       	ldi	r25, 0x13	; 19
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <init_display+0x84>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <init_display+0x8a>
 3da:	00 00       	nop
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	92 de       	rcall	.-732    	; 0x104 <set_display_data_pins>
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	82 de       	rcall	.-764    	; 0xe8 <display_enable>
 3e4:	87 e8       	ldi	r24, 0x87	; 135
 3e6:	93 e1       	ldi	r25, 0x13	; 19
 3e8:	01 97       	sbiw	r24, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <init_display+0x98>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <init_display+0x9e>
 3ee:	00 00       	nop
 3f0:	8c e0       	ldi	r24, 0x0C	; 12
 3f2:	88 de       	rcall	.-752    	; 0x104 <set_display_data_pins>
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	78 de       	rcall	.-784    	; 0xe8 <display_enable>
 3f8:	87 e8       	ldi	r24, 0x87	; 135
 3fa:	93 e1       	ldi	r25, 0x13	; 19
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	f1 f7       	brne	.-4      	; 0x3fc <init_display+0xac>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 402:	00 00       	nop
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	7e de       	rcall	.-772    	; 0x104 <set_display_data_pins>
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	6e de       	rcall	.-804    	; 0xe8 <display_enable>
 40c:	87 e8       	ldi	r24, 0x87	; 135
 40e:	93 e1       	ldi	r25, 0x13	; 19
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 416:	00 00       	nop
 418:	86 e0       	ldi	r24, 0x06	; 6
 41a:	74 de       	rcall	.-792    	; 0x104 <set_display_data_pins>
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	64 de       	rcall	.-824    	; 0xe8 <display_enable>
 420:	87 e8       	ldi	r24, 0x87	; 135
 422:	93 e1       	ldi	r25, 0x13	; 19
 424:	01 97       	sbiw	r24, 0x01	; 1
 426:	f1 f7       	brne	.-4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 428:	00 c0       	rjmp	.+0      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 42a:	00 00       	nop
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	6a de       	rcall	.-812    	; 0x104 <set_display_data_pins>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	5a de       	rcall	.-844    	; 0xe8 <display_enable>
 434:	87 e8       	ldi	r24, 0x87	; 135
 436:	93 e1       	ldi	r25, 0x13	; 19
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43e:	00 00       	nop
 440:	86 e0       	ldi	r24, 0x06	; 6
 442:	60 de       	rcall	.-832    	; 0x104 <set_display_data_pins>
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	50 de       	rcall	.-864    	; 0xe8 <display_enable>
 448:	87 e8       	ldi	r24, 0x87	; 135
 44a:	93 e1       	ldi	r25, 0x13	; 19
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 452:	00 00       	nop
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	56 de       	rcall	.-852    	; 0x104 <set_display_data_pins>
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	46 de       	rcall	.-884    	; 0xe8 <display_enable>
 45c:	87 e8       	ldi	r24, 0x87	; 135
 45e:	93 e1       	ldi	r25, 0x13	; 19
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	f1 f7       	brne	.-4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 466:	00 00       	nop
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	4c de       	rcall	.-872    	; 0x104 <set_display_data_pins>
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	3c de       	rcall	.-904    	; 0xe8 <display_enable>
 470:	87 e8       	ldi	r24, 0x87	; 135
 472:	93 e1       	ldi	r25, 0x13	; 19
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 47a:	00 00       	nop
 47c:	08 95       	ret

0000047e <display_write_char>:
 47e:	cf 93       	push	r28
 480:	c8 2f       	mov	r28, r24
 482:	4a de       	rcall	.-876    	; 0x118 <display_set_rs_pin>
 484:	8c 2f       	mov	r24, r28
 486:	82 95       	swap	r24
 488:	8f 70       	andi	r24, 0x0F	; 15
 48a:	3c de       	rcall	.-904    	; 0x104 <set_display_data_pins>
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	2c de       	rcall	.-936    	; 0xe8 <display_enable>
 490:	8c 2f       	mov	r24, r28
 492:	38 de       	rcall	.-912    	; 0x104 <set_display_data_pins>
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	28 de       	rcall	.-944    	; 0xe8 <display_enable>
 498:	cf 91       	pop	r28
 49a:	08 95       	ret

0000049c <display_write_string>:
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	ec 01       	movw	r28, r24
 4a2:	3a de       	rcall	.-908    	; 0x118 <display_set_rs_pin>
 4a4:	88 81       	ld	r24, Y
 4a6:	88 23       	and	r24, r24
 4a8:	29 f0       	breq	.+10     	; 0x4b4 <display_write_string+0x18>
 4aa:	21 96       	adiw	r28, 0x01	; 1
 4ac:	e8 df       	rcall	.-48     	; 0x47e <display_write_char>
 4ae:	89 91       	ld	r24, Y+
 4b0:	81 11       	cpse	r24, r1
 4b2:	fc cf       	rjmp	.-8      	; 0x4ac <display_write_string+0x10>
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	08 95       	ret

000004ba <display_clear>:
	display_enable(1);
	_delay_ms(5);
}

void display_clear(void) {
	display_clear_rs_pin();
 4ba:	32 de       	rcall	.-924    	; 0x120 <display_clear_rs_pin>
	set_display_data_pins(0x00);
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	22 de       	rcall	.-956    	; 0x104 <set_display_data_pins>
	display_enable(1);
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	12 de       	rcall	.-988    	; 0xe8 <display_enable>
	set_display_data_pins(0x01);
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	1e de       	rcall	.-964    	; 0x104 <set_display_data_pins>
	display_enable(1);
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	0e de       	rcall	.-996    	; 0xe8 <display_enable>
 4cc:	87 ea       	ldi	r24, 0xA7	; 167
 4ce:	91 e6       	ldi	r25, 0x61	; 97
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	f1 f7       	brne	.-4      	; 0x4d0 <display_clear+0x16>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <display_clear+0x1c>
 4d6:	00 00       	nop
 4d8:	08 95       	ret

000004da <USART0_enable_rx_complete_interrupt>:
	return USART0.RXDATAL;
}

uint8_t USART0_receive_complete() {
	return USART0.STATUS & USART_RXCIF_bm;
}
 4da:	e0 e0       	ldi	r30, 0x00	; 0
 4dc:	f8 e0       	ldi	r31, 0x08	; 8
 4de:	85 81       	ldd	r24, Z+5	; 0x05
 4e0:	80 68       	ori	r24, 0x80	; 128
 4e2:	85 83       	std	Z+5, r24	; 0x05
 4e4:	08 95       	ret

000004e6 <init_uart>:
 4e6:	20 de       	rcall	.-960    	; 0x128 <set_pb2_txd_and_pb3_rxd>
 4e8:	e0 e0       	ldi	r30, 0x00	; 0
 4ea:	f8 e0       	ldi	r31, 0x08	; 8
 4ec:	8c e6       	ldi	r24, 0x6C	; 108
 4ee:	95 e0       	ldi	r25, 0x05	; 5
 4f0:	80 87       	std	Z+8, r24	; 0x08
 4f2:	91 87       	std	Z+9, r25	; 0x09
 4f4:	80 ec       	ldi	r24, 0xC0	; 192
 4f6:	86 83       	std	Z+6, r24	; 0x06
 4f8:	f0 df       	rcall	.-32     	; 0x4da <USART0_enable_rx_complete_interrupt>
 4fa:	08 95       	ret

000004fc <USART0_sendChar>:
 4fc:	e0 e0       	ldi	r30, 0x00	; 0
 4fe:	f8 e0       	ldi	r31, 0x08	; 8
 500:	94 81       	ldd	r25, Z+4	; 0x04
 502:	95 ff       	sbrs	r25, 5
 504:	fd cf       	rjmp	.-6      	; 0x500 <USART0_sendChar+0x4>
 506:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x700802>
 50a:	08 95       	ret

0000050c <USART0_sendString>:
 50c:	ef 92       	push	r14
 50e:	ff 92       	push	r15
 510:	0f 93       	push	r16
 512:	1f 93       	push	r17
 514:	cf 93       	push	r28
 516:	df 93       	push	r29
 518:	8c 01       	movw	r16, r24
 51a:	7c 01       	movw	r14, r24
 51c:	c0 e0       	ldi	r28, 0x00	; 0
 51e:	d0 e0       	ldi	r29, 0x00	; 0
 520:	05 c0       	rjmp	.+10     	; 0x52c <USART0_sendString+0x20>
 522:	f7 01       	movw	r30, r14
 524:	81 91       	ld	r24, Z+
 526:	7f 01       	movw	r14, r30
 528:	e9 df       	rcall	.-46     	; 0x4fc <USART0_sendChar>
 52a:	21 96       	adiw	r28, 0x01	; 1
 52c:	f8 01       	movw	r30, r16
 52e:	01 90       	ld	r0, Z+
 530:	00 20       	and	r0, r0
 532:	e9 f7       	brne	.-6      	; 0x52e <USART0_sendString+0x22>
 534:	31 97       	sbiw	r30, 0x01	; 1
 536:	e0 1b       	sub	r30, r16
 538:	f1 0b       	sbc	r31, r17
 53a:	ce 17       	cp	r28, r30
 53c:	df 07       	cpc	r29, r31
 53e:	88 f3       	brcs	.-30     	; 0x522 <USART0_sendString+0x16>
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	1f 91       	pop	r17
 546:	0f 91       	pop	r16
 548:	ff 90       	pop	r15
 54a:	ef 90       	pop	r14
 54c:	08 95       	ret

0000054e <USART0_sendString_w_eol>:
 54e:	de df       	rcall	.-68     	; 0x50c <USART0_sendString>
 550:	8a e0       	ldi	r24, 0x0A	; 10
 552:	d4 df       	rcall	.-88     	; 0x4fc <USART0_sendChar>
 554:	08 95       	ret

00000556 <USART0_read>:
 556:	e0 e0       	ldi	r30, 0x00	; 0
 558:	f8 e0       	ldi	r31, 0x08	; 8
 55a:	84 81       	ldd	r24, Z+4	; 0x04
 55c:	88 23       	and	r24, r24
 55e:	ec f7       	brge	.-6      	; 0x55a <USART0_read+0x4>
 560:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
 564:	08 95       	ret

00000566 <__vector_22>:

/* to be implemented */
ISR(USART0_RXC_vect) {
 566:	1f 92       	push	r1
 568:	0f 92       	push	r0
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	0f 92       	push	r0
 56e:	11 24       	eor	r1, r1
 570:	2f 93       	push	r18
 572:	3f 93       	push	r19
 574:	4f 93       	push	r20
 576:	5f 93       	push	r21
 578:	6f 93       	push	r22
 57a:	7f 93       	push	r23
 57c:	8f 93       	push	r24
 57e:	9f 93       	push	r25
 580:	af 93       	push	r26
 582:	bf 93       	push	r27
 584:	ef 93       	push	r30
 586:	ff 93       	push	r31
	temp_receive_buffer = USART0_read();
 588:	e6 df       	rcall	.-52     	; 0x556 <USART0_read>
 58a:	80 93 27 3e 	sts	0x3E27, r24	; 0x803e27 <temp_receive_buffer>
	if(temp_receive_buffer == '\0') {
 58e:	81 11       	cpse	r24, r1
 590:	03 c0       	rjmp	.+6      	; 0x598 <__vector_22+0x32>
		flag_usart_string_receive_complete = true;
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	80 93 06 3e 	sts	0x3E06, r24	; 0x803e06 <flag_usart_string_receive_complete>
	}
	else {
		append_current_byte_to_receive_buffer(temp_receive_buffer);
	}
}
 598:	ff 91       	pop	r31
 59a:	ef 91       	pop	r30
 59c:	bf 91       	pop	r27
 59e:	af 91       	pop	r26
 5a0:	9f 91       	pop	r25
 5a2:	8f 91       	pop	r24
 5a4:	7f 91       	pop	r23
 5a6:	6f 91       	pop	r22
 5a8:	5f 91       	pop	r21
 5aa:	4f 91       	pop	r20
 5ac:	3f 91       	pop	r19
 5ae:	2f 91       	pop	r18
 5b0:	0f 90       	pop	r0
 5b2:	0f be       	out	0x3f, r0	; 63
 5b4:	0f 90       	pop	r0
 5b6:	1f 90       	pop	r1
 5b8:	18 95       	reti

000005ba <sprintf>:
 5ba:	ae e0       	ldi	r26, 0x0E	; 14
 5bc:	b0 e0       	ldi	r27, 0x00	; 0
 5be:	e2 ee       	ldi	r30, 0xE2	; 226
 5c0:	f2 e0       	ldi	r31, 0x02	; 2
 5c2:	aa c2       	rjmp	.+1364   	; 0xb18 <__prologue_saves__+0x1c>
 5c4:	0d 89       	ldd	r16, Y+21	; 0x15
 5c6:	1e 89       	ldd	r17, Y+22	; 0x16
 5c8:	86 e0       	ldi	r24, 0x06	; 6
 5ca:	8c 83       	std	Y+4, r24	; 0x04
 5cc:	09 83       	std	Y+1, r16	; 0x01
 5ce:	1a 83       	std	Y+2, r17	; 0x02
 5d0:	8f ef       	ldi	r24, 0xFF	; 255
 5d2:	9f e7       	ldi	r25, 0x7F	; 127
 5d4:	8d 83       	std	Y+5, r24	; 0x05
 5d6:	9e 83       	std	Y+6, r25	; 0x06
 5d8:	ae 01       	movw	r20, r28
 5da:	47 5e       	subi	r20, 0xE7	; 231
 5dc:	5f 4f       	sbci	r21, 0xFF	; 255
 5de:	6f 89       	ldd	r22, Y+23	; 0x17
 5e0:	78 8d       	ldd	r23, Y+24	; 0x18
 5e2:	ce 01       	movw	r24, r28
 5e4:	01 96       	adiw	r24, 0x01	; 1
 5e6:	08 d0       	rcall	.+16     	; 0x5f8 <vfprintf>
 5e8:	ef 81       	ldd	r30, Y+7	; 0x07
 5ea:	f8 85       	ldd	r31, Y+8	; 0x08
 5ec:	e0 0f       	add	r30, r16
 5ee:	f1 1f       	adc	r31, r17
 5f0:	10 82       	st	Z, r1
 5f2:	2e 96       	adiw	r28, 0x0e	; 14
 5f4:	e4 e0       	ldi	r30, 0x04	; 4
 5f6:	a9 c2       	rjmp	.+1362   	; 0xb4a <__epilogue_restores__+0x1c>

000005f8 <vfprintf>:
 5f8:	ab e0       	ldi	r26, 0x0B	; 11
 5fa:	b0 e0       	ldi	r27, 0x00	; 0
 5fc:	e1 e0       	ldi	r30, 0x01	; 1
 5fe:	f3 e0       	ldi	r31, 0x03	; 3
 600:	7d c2       	rjmp	.+1274   	; 0xafc <__prologue_saves__>
 602:	6c 01       	movw	r12, r24
 604:	7b 01       	movw	r14, r22
 606:	8a 01       	movw	r16, r20
 608:	fc 01       	movw	r30, r24
 60a:	16 82       	std	Z+6, r1	; 0x06
 60c:	17 82       	std	Z+7, r1	; 0x07
 60e:	83 81       	ldd	r24, Z+3	; 0x03
 610:	81 ff       	sbrs	r24, 1
 612:	bf c1       	rjmp	.+894    	; 0x992 <vfprintf+0x39a>
 614:	ce 01       	movw	r24, r28
 616:	01 96       	adiw	r24, 0x01	; 1
 618:	3c 01       	movw	r6, r24
 61a:	f6 01       	movw	r30, r12
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	f7 01       	movw	r30, r14
 620:	93 fd       	sbrc	r25, 3
 622:	85 91       	lpm	r24, Z+
 624:	93 ff       	sbrs	r25, 3
 626:	81 91       	ld	r24, Z+
 628:	7f 01       	movw	r14, r30
 62a:	88 23       	and	r24, r24
 62c:	09 f4       	brne	.+2      	; 0x630 <vfprintf+0x38>
 62e:	ad c1       	rjmp	.+858    	; 0x98a <vfprintf+0x392>
 630:	85 32       	cpi	r24, 0x25	; 37
 632:	39 f4       	brne	.+14     	; 0x642 <vfprintf+0x4a>
 634:	93 fd       	sbrc	r25, 3
 636:	85 91       	lpm	r24, Z+
 638:	93 ff       	sbrs	r25, 3
 63a:	81 91       	ld	r24, Z+
 63c:	7f 01       	movw	r14, r30
 63e:	85 32       	cpi	r24, 0x25	; 37
 640:	21 f4       	brne	.+8      	; 0x64a <vfprintf+0x52>
 642:	b6 01       	movw	r22, r12
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	c0 d1       	rcall	.+896    	; 0x9c8 <fputc>
 648:	e8 cf       	rjmp	.-48     	; 0x61a <vfprintf+0x22>
 64a:	91 2c       	mov	r9, r1
 64c:	21 2c       	mov	r2, r1
 64e:	31 2c       	mov	r3, r1
 650:	ff e1       	ldi	r31, 0x1F	; 31
 652:	f3 15       	cp	r31, r3
 654:	d8 f0       	brcs	.+54     	; 0x68c <vfprintf+0x94>
 656:	8b 32       	cpi	r24, 0x2B	; 43
 658:	79 f0       	breq	.+30     	; 0x678 <vfprintf+0x80>
 65a:	38 f4       	brcc	.+14     	; 0x66a <vfprintf+0x72>
 65c:	80 32       	cpi	r24, 0x20	; 32
 65e:	79 f0       	breq	.+30     	; 0x67e <vfprintf+0x86>
 660:	83 32       	cpi	r24, 0x23	; 35
 662:	a1 f4       	brne	.+40     	; 0x68c <vfprintf+0x94>
 664:	23 2d       	mov	r18, r3
 666:	20 61       	ori	r18, 0x10	; 16
 668:	1d c0       	rjmp	.+58     	; 0x6a4 <vfprintf+0xac>
 66a:	8d 32       	cpi	r24, 0x2D	; 45
 66c:	61 f0       	breq	.+24     	; 0x686 <vfprintf+0x8e>
 66e:	80 33       	cpi	r24, 0x30	; 48
 670:	69 f4       	brne	.+26     	; 0x68c <vfprintf+0x94>
 672:	23 2d       	mov	r18, r3
 674:	21 60       	ori	r18, 0x01	; 1
 676:	16 c0       	rjmp	.+44     	; 0x6a4 <vfprintf+0xac>
 678:	83 2d       	mov	r24, r3
 67a:	82 60       	ori	r24, 0x02	; 2
 67c:	38 2e       	mov	r3, r24
 67e:	e3 2d       	mov	r30, r3
 680:	e4 60       	ori	r30, 0x04	; 4
 682:	3e 2e       	mov	r3, r30
 684:	2a c0       	rjmp	.+84     	; 0x6da <vfprintf+0xe2>
 686:	f3 2d       	mov	r31, r3
 688:	f8 60       	ori	r31, 0x08	; 8
 68a:	1d c0       	rjmp	.+58     	; 0x6c6 <vfprintf+0xce>
 68c:	37 fc       	sbrc	r3, 7
 68e:	2d c0       	rjmp	.+90     	; 0x6ea <vfprintf+0xf2>
 690:	20 ed       	ldi	r18, 0xD0	; 208
 692:	28 0f       	add	r18, r24
 694:	2a 30       	cpi	r18, 0x0A	; 10
 696:	40 f0       	brcs	.+16     	; 0x6a8 <vfprintf+0xb0>
 698:	8e 32       	cpi	r24, 0x2E	; 46
 69a:	b9 f4       	brne	.+46     	; 0x6ca <vfprintf+0xd2>
 69c:	36 fc       	sbrc	r3, 6
 69e:	75 c1       	rjmp	.+746    	; 0x98a <vfprintf+0x392>
 6a0:	23 2d       	mov	r18, r3
 6a2:	20 64       	ori	r18, 0x40	; 64
 6a4:	32 2e       	mov	r3, r18
 6a6:	19 c0       	rjmp	.+50     	; 0x6da <vfprintf+0xe2>
 6a8:	36 fe       	sbrs	r3, 6
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <vfprintf+0xc0>
 6ac:	8a e0       	ldi	r24, 0x0A	; 10
 6ae:	98 9e       	mul	r9, r24
 6b0:	20 0d       	add	r18, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	92 2e       	mov	r9, r18
 6b6:	11 c0       	rjmp	.+34     	; 0x6da <vfprintf+0xe2>
 6b8:	ea e0       	ldi	r30, 0x0A	; 10
 6ba:	2e 9e       	mul	r2, r30
 6bc:	20 0d       	add	r18, r0
 6be:	11 24       	eor	r1, r1
 6c0:	22 2e       	mov	r2, r18
 6c2:	f3 2d       	mov	r31, r3
 6c4:	f0 62       	ori	r31, 0x20	; 32
 6c6:	3f 2e       	mov	r3, r31
 6c8:	08 c0       	rjmp	.+16     	; 0x6da <vfprintf+0xe2>
 6ca:	8c 36       	cpi	r24, 0x6C	; 108
 6cc:	21 f4       	brne	.+8      	; 0x6d6 <vfprintf+0xde>
 6ce:	83 2d       	mov	r24, r3
 6d0:	80 68       	ori	r24, 0x80	; 128
 6d2:	38 2e       	mov	r3, r24
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <vfprintf+0xe2>
 6d6:	88 36       	cpi	r24, 0x68	; 104
 6d8:	41 f4       	brne	.+16     	; 0x6ea <vfprintf+0xf2>
 6da:	f7 01       	movw	r30, r14
 6dc:	93 fd       	sbrc	r25, 3
 6de:	85 91       	lpm	r24, Z+
 6e0:	93 ff       	sbrs	r25, 3
 6e2:	81 91       	ld	r24, Z+
 6e4:	7f 01       	movw	r14, r30
 6e6:	81 11       	cpse	r24, r1
 6e8:	b3 cf       	rjmp	.-154    	; 0x650 <vfprintf+0x58>
 6ea:	98 2f       	mov	r25, r24
 6ec:	9f 7d       	andi	r25, 0xDF	; 223
 6ee:	95 54       	subi	r25, 0x45	; 69
 6f0:	93 30       	cpi	r25, 0x03	; 3
 6f2:	28 f4       	brcc	.+10     	; 0x6fe <vfprintf+0x106>
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	9f e3       	ldi	r25, 0x3F	; 63
 6fa:	99 83       	std	Y+1, r25	; 0x01
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x120>
 6fe:	83 36       	cpi	r24, 0x63	; 99
 700:	31 f0       	breq	.+12     	; 0x70e <vfprintf+0x116>
 702:	83 37       	cpi	r24, 0x73	; 115
 704:	71 f0       	breq	.+28     	; 0x722 <vfprintf+0x12a>
 706:	83 35       	cpi	r24, 0x53	; 83
 708:	09 f0       	breq	.+2      	; 0x70c <vfprintf+0x114>
 70a:	55 c0       	rjmp	.+170    	; 0x7b6 <vfprintf+0x1be>
 70c:	20 c0       	rjmp	.+64     	; 0x74e <vfprintf+0x156>
 70e:	f8 01       	movw	r30, r16
 710:	80 81       	ld	r24, Z
 712:	89 83       	std	Y+1, r24	; 0x01
 714:	0e 5f       	subi	r16, 0xFE	; 254
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	88 24       	eor	r8, r8
 71a:	83 94       	inc	r8
 71c:	91 2c       	mov	r9, r1
 71e:	53 01       	movw	r10, r6
 720:	12 c0       	rjmp	.+36     	; 0x746 <vfprintf+0x14e>
 722:	28 01       	movw	r4, r16
 724:	f2 e0       	ldi	r31, 0x02	; 2
 726:	4f 0e       	add	r4, r31
 728:	51 1c       	adc	r5, r1
 72a:	f8 01       	movw	r30, r16
 72c:	a0 80       	ld	r10, Z
 72e:	b1 80       	ldd	r11, Z+1	; 0x01
 730:	36 fe       	sbrs	r3, 6
 732:	03 c0       	rjmp	.+6      	; 0x73a <vfprintf+0x142>
 734:	69 2d       	mov	r22, r9
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x146>
 73a:	6f ef       	ldi	r22, 0xFF	; 255
 73c:	7f ef       	ldi	r23, 0xFF	; 255
 73e:	c5 01       	movw	r24, r10
 740:	38 d1       	rcall	.+624    	; 0x9b2 <strnlen>
 742:	4c 01       	movw	r8, r24
 744:	82 01       	movw	r16, r4
 746:	f3 2d       	mov	r31, r3
 748:	ff 77       	andi	r31, 0x7F	; 127
 74a:	3f 2e       	mov	r3, r31
 74c:	15 c0       	rjmp	.+42     	; 0x778 <vfprintf+0x180>
 74e:	28 01       	movw	r4, r16
 750:	22 e0       	ldi	r18, 0x02	; 2
 752:	42 0e       	add	r4, r18
 754:	51 1c       	adc	r5, r1
 756:	f8 01       	movw	r30, r16
 758:	a0 80       	ld	r10, Z
 75a:	b1 80       	ldd	r11, Z+1	; 0x01
 75c:	36 fe       	sbrs	r3, 6
 75e:	03 c0       	rjmp	.+6      	; 0x766 <vfprintf+0x16e>
 760:	69 2d       	mov	r22, r9
 762:	70 e0       	ldi	r23, 0x00	; 0
 764:	02 c0       	rjmp	.+4      	; 0x76a <vfprintf+0x172>
 766:	6f ef       	ldi	r22, 0xFF	; 255
 768:	7f ef       	ldi	r23, 0xFF	; 255
 76a:	c5 01       	movw	r24, r10
 76c:	17 d1       	rcall	.+558    	; 0x99c <strnlen_P>
 76e:	4c 01       	movw	r8, r24
 770:	f3 2d       	mov	r31, r3
 772:	f0 68       	ori	r31, 0x80	; 128
 774:	3f 2e       	mov	r3, r31
 776:	82 01       	movw	r16, r4
 778:	33 fc       	sbrc	r3, 3
 77a:	19 c0       	rjmp	.+50     	; 0x7ae <vfprintf+0x1b6>
 77c:	82 2d       	mov	r24, r2
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	88 16       	cp	r8, r24
 782:	99 06       	cpc	r9, r25
 784:	a0 f4       	brcc	.+40     	; 0x7ae <vfprintf+0x1b6>
 786:	b6 01       	movw	r22, r12
 788:	80 e2       	ldi	r24, 0x20	; 32
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	1d d1       	rcall	.+570    	; 0x9c8 <fputc>
 78e:	2a 94       	dec	r2
 790:	f5 cf       	rjmp	.-22     	; 0x77c <vfprintf+0x184>
 792:	f5 01       	movw	r30, r10
 794:	37 fc       	sbrc	r3, 7
 796:	85 91       	lpm	r24, Z+
 798:	37 fe       	sbrs	r3, 7
 79a:	81 91       	ld	r24, Z+
 79c:	5f 01       	movw	r10, r30
 79e:	b6 01       	movw	r22, r12
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	12 d1       	rcall	.+548    	; 0x9c8 <fputc>
 7a4:	21 10       	cpse	r2, r1
 7a6:	2a 94       	dec	r2
 7a8:	21 e0       	ldi	r18, 0x01	; 1
 7aa:	82 1a       	sub	r8, r18
 7ac:	91 08       	sbc	r9, r1
 7ae:	81 14       	cp	r8, r1
 7b0:	91 04       	cpc	r9, r1
 7b2:	79 f7       	brne	.-34     	; 0x792 <vfprintf+0x19a>
 7b4:	e1 c0       	rjmp	.+450    	; 0x978 <vfprintf+0x380>
 7b6:	84 36       	cpi	r24, 0x64	; 100
 7b8:	11 f0       	breq	.+4      	; 0x7be <vfprintf+0x1c6>
 7ba:	89 36       	cpi	r24, 0x69	; 105
 7bc:	39 f5       	brne	.+78     	; 0x80c <vfprintf+0x214>
 7be:	f8 01       	movw	r30, r16
 7c0:	37 fe       	sbrs	r3, 7
 7c2:	07 c0       	rjmp	.+14     	; 0x7d2 <vfprintf+0x1da>
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	82 81       	ldd	r24, Z+2	; 0x02
 7ca:	93 81       	ldd	r25, Z+3	; 0x03
 7cc:	0c 5f       	subi	r16, 0xFC	; 252
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	08 c0       	rjmp	.+16     	; 0x7e2 <vfprintf+0x1ea>
 7d2:	60 81       	ld	r22, Z
 7d4:	71 81       	ldd	r23, Z+1	; 0x01
 7d6:	07 2e       	mov	r0, r23
 7d8:	00 0c       	add	r0, r0
 7da:	88 0b       	sbc	r24, r24
 7dc:	99 0b       	sbc	r25, r25
 7de:	0e 5f       	subi	r16, 0xFE	; 254
 7e0:	1f 4f       	sbci	r17, 0xFF	; 255
 7e2:	f3 2d       	mov	r31, r3
 7e4:	ff 76       	andi	r31, 0x6F	; 111
 7e6:	3f 2e       	mov	r3, r31
 7e8:	97 ff       	sbrs	r25, 7
 7ea:	09 c0       	rjmp	.+18     	; 0x7fe <vfprintf+0x206>
 7ec:	90 95       	com	r25
 7ee:	80 95       	com	r24
 7f0:	70 95       	com	r23
 7f2:	61 95       	neg	r22
 7f4:	7f 4f       	sbci	r23, 0xFF	; 255
 7f6:	8f 4f       	sbci	r24, 0xFF	; 255
 7f8:	9f 4f       	sbci	r25, 0xFF	; 255
 7fa:	f0 68       	ori	r31, 0x80	; 128
 7fc:	3f 2e       	mov	r3, r31
 7fe:	2a e0       	ldi	r18, 0x0A	; 10
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	a3 01       	movw	r20, r6
 804:	1d d1       	rcall	.+570    	; 0xa40 <__ultoa_invert>
 806:	88 2e       	mov	r8, r24
 808:	86 18       	sub	r8, r6
 80a:	44 c0       	rjmp	.+136    	; 0x894 <vfprintf+0x29c>
 80c:	85 37       	cpi	r24, 0x75	; 117
 80e:	31 f4       	brne	.+12     	; 0x81c <vfprintf+0x224>
 810:	23 2d       	mov	r18, r3
 812:	2f 7e       	andi	r18, 0xEF	; 239
 814:	b2 2e       	mov	r11, r18
 816:	2a e0       	ldi	r18, 0x0A	; 10
 818:	30 e0       	ldi	r19, 0x00	; 0
 81a:	25 c0       	rjmp	.+74     	; 0x866 <vfprintf+0x26e>
 81c:	93 2d       	mov	r25, r3
 81e:	99 7f       	andi	r25, 0xF9	; 249
 820:	b9 2e       	mov	r11, r25
 822:	8f 36       	cpi	r24, 0x6F	; 111
 824:	c1 f0       	breq	.+48     	; 0x856 <vfprintf+0x25e>
 826:	18 f4       	brcc	.+6      	; 0x82e <vfprintf+0x236>
 828:	88 35       	cpi	r24, 0x58	; 88
 82a:	79 f0       	breq	.+30     	; 0x84a <vfprintf+0x252>
 82c:	ae c0       	rjmp	.+348    	; 0x98a <vfprintf+0x392>
 82e:	80 37       	cpi	r24, 0x70	; 112
 830:	19 f0       	breq	.+6      	; 0x838 <vfprintf+0x240>
 832:	88 37       	cpi	r24, 0x78	; 120
 834:	21 f0       	breq	.+8      	; 0x83e <vfprintf+0x246>
 836:	a9 c0       	rjmp	.+338    	; 0x98a <vfprintf+0x392>
 838:	e9 2f       	mov	r30, r25
 83a:	e0 61       	ori	r30, 0x10	; 16
 83c:	be 2e       	mov	r11, r30
 83e:	b4 fe       	sbrs	r11, 4
 840:	0d c0       	rjmp	.+26     	; 0x85c <vfprintf+0x264>
 842:	fb 2d       	mov	r31, r11
 844:	f4 60       	ori	r31, 0x04	; 4
 846:	bf 2e       	mov	r11, r31
 848:	09 c0       	rjmp	.+18     	; 0x85c <vfprintf+0x264>
 84a:	34 fe       	sbrs	r3, 4
 84c:	0a c0       	rjmp	.+20     	; 0x862 <vfprintf+0x26a>
 84e:	29 2f       	mov	r18, r25
 850:	26 60       	ori	r18, 0x06	; 6
 852:	b2 2e       	mov	r11, r18
 854:	06 c0       	rjmp	.+12     	; 0x862 <vfprintf+0x26a>
 856:	28 e0       	ldi	r18, 0x08	; 8
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	05 c0       	rjmp	.+10     	; 0x866 <vfprintf+0x26e>
 85c:	20 e1       	ldi	r18, 0x10	; 16
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <vfprintf+0x26e>
 862:	20 e1       	ldi	r18, 0x10	; 16
 864:	32 e0       	ldi	r19, 0x02	; 2
 866:	f8 01       	movw	r30, r16
 868:	b7 fe       	sbrs	r11, 7
 86a:	07 c0       	rjmp	.+14     	; 0x87a <vfprintf+0x282>
 86c:	60 81       	ld	r22, Z
 86e:	71 81       	ldd	r23, Z+1	; 0x01
 870:	82 81       	ldd	r24, Z+2	; 0x02
 872:	93 81       	ldd	r25, Z+3	; 0x03
 874:	0c 5f       	subi	r16, 0xFC	; 252
 876:	1f 4f       	sbci	r17, 0xFF	; 255
 878:	06 c0       	rjmp	.+12     	; 0x886 <vfprintf+0x28e>
 87a:	60 81       	ld	r22, Z
 87c:	71 81       	ldd	r23, Z+1	; 0x01
 87e:	80 e0       	ldi	r24, 0x00	; 0
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 5f       	subi	r16, 0xFE	; 254
 884:	1f 4f       	sbci	r17, 0xFF	; 255
 886:	a3 01       	movw	r20, r6
 888:	db d0       	rcall	.+438    	; 0xa40 <__ultoa_invert>
 88a:	88 2e       	mov	r8, r24
 88c:	86 18       	sub	r8, r6
 88e:	fb 2d       	mov	r31, r11
 890:	ff 77       	andi	r31, 0x7F	; 127
 892:	3f 2e       	mov	r3, r31
 894:	36 fe       	sbrs	r3, 6
 896:	0d c0       	rjmp	.+26     	; 0x8b2 <vfprintf+0x2ba>
 898:	23 2d       	mov	r18, r3
 89a:	2e 7f       	andi	r18, 0xFE	; 254
 89c:	a2 2e       	mov	r10, r18
 89e:	89 14       	cp	r8, r9
 8a0:	58 f4       	brcc	.+22     	; 0x8b8 <vfprintf+0x2c0>
 8a2:	34 fe       	sbrs	r3, 4
 8a4:	0b c0       	rjmp	.+22     	; 0x8bc <vfprintf+0x2c4>
 8a6:	32 fc       	sbrc	r3, 2
 8a8:	09 c0       	rjmp	.+18     	; 0x8bc <vfprintf+0x2c4>
 8aa:	83 2d       	mov	r24, r3
 8ac:	8e 7e       	andi	r24, 0xEE	; 238
 8ae:	a8 2e       	mov	r10, r24
 8b0:	05 c0       	rjmp	.+10     	; 0x8bc <vfprintf+0x2c4>
 8b2:	b8 2c       	mov	r11, r8
 8b4:	a3 2c       	mov	r10, r3
 8b6:	03 c0       	rjmp	.+6      	; 0x8be <vfprintf+0x2c6>
 8b8:	b8 2c       	mov	r11, r8
 8ba:	01 c0       	rjmp	.+2      	; 0x8be <vfprintf+0x2c6>
 8bc:	b9 2c       	mov	r11, r9
 8be:	a4 fe       	sbrs	r10, 4
 8c0:	0f c0       	rjmp	.+30     	; 0x8e0 <vfprintf+0x2e8>
 8c2:	fe 01       	movw	r30, r28
 8c4:	e8 0d       	add	r30, r8
 8c6:	f1 1d       	adc	r31, r1
 8c8:	80 81       	ld	r24, Z
 8ca:	80 33       	cpi	r24, 0x30	; 48
 8cc:	21 f4       	brne	.+8      	; 0x8d6 <vfprintf+0x2de>
 8ce:	9a 2d       	mov	r25, r10
 8d0:	99 7e       	andi	r25, 0xE9	; 233
 8d2:	a9 2e       	mov	r10, r25
 8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <vfprintf+0x2f0>
 8d6:	a2 fe       	sbrs	r10, 2
 8d8:	06 c0       	rjmp	.+12     	; 0x8e6 <vfprintf+0x2ee>
 8da:	b3 94       	inc	r11
 8dc:	b3 94       	inc	r11
 8de:	04 c0       	rjmp	.+8      	; 0x8e8 <vfprintf+0x2f0>
 8e0:	8a 2d       	mov	r24, r10
 8e2:	86 78       	andi	r24, 0x86	; 134
 8e4:	09 f0       	breq	.+2      	; 0x8e8 <vfprintf+0x2f0>
 8e6:	b3 94       	inc	r11
 8e8:	a3 fc       	sbrc	r10, 3
 8ea:	10 c0       	rjmp	.+32     	; 0x90c <vfprintf+0x314>
 8ec:	a0 fe       	sbrs	r10, 0
 8ee:	06 c0       	rjmp	.+12     	; 0x8fc <vfprintf+0x304>
 8f0:	b2 14       	cp	r11, r2
 8f2:	80 f4       	brcc	.+32     	; 0x914 <vfprintf+0x31c>
 8f4:	28 0c       	add	r2, r8
 8f6:	92 2c       	mov	r9, r2
 8f8:	9b 18       	sub	r9, r11
 8fa:	0d c0       	rjmp	.+26     	; 0x916 <vfprintf+0x31e>
 8fc:	b2 14       	cp	r11, r2
 8fe:	58 f4       	brcc	.+22     	; 0x916 <vfprintf+0x31e>
 900:	b6 01       	movw	r22, r12
 902:	80 e2       	ldi	r24, 0x20	; 32
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	60 d0       	rcall	.+192    	; 0x9c8 <fputc>
 908:	b3 94       	inc	r11
 90a:	f8 cf       	rjmp	.-16     	; 0x8fc <vfprintf+0x304>
 90c:	b2 14       	cp	r11, r2
 90e:	18 f4       	brcc	.+6      	; 0x916 <vfprintf+0x31e>
 910:	2b 18       	sub	r2, r11
 912:	02 c0       	rjmp	.+4      	; 0x918 <vfprintf+0x320>
 914:	98 2c       	mov	r9, r8
 916:	21 2c       	mov	r2, r1
 918:	a4 fe       	sbrs	r10, 4
 91a:	0f c0       	rjmp	.+30     	; 0x93a <vfprintf+0x342>
 91c:	b6 01       	movw	r22, r12
 91e:	80 e3       	ldi	r24, 0x30	; 48
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	52 d0       	rcall	.+164    	; 0x9c8 <fputc>
 924:	a2 fe       	sbrs	r10, 2
 926:	16 c0       	rjmp	.+44     	; 0x954 <vfprintf+0x35c>
 928:	a1 fc       	sbrc	r10, 1
 92a:	03 c0       	rjmp	.+6      	; 0x932 <vfprintf+0x33a>
 92c:	88 e7       	ldi	r24, 0x78	; 120
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	02 c0       	rjmp	.+4      	; 0x936 <vfprintf+0x33e>
 932:	88 e5       	ldi	r24, 0x58	; 88
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	b6 01       	movw	r22, r12
 938:	0c c0       	rjmp	.+24     	; 0x952 <vfprintf+0x35a>
 93a:	8a 2d       	mov	r24, r10
 93c:	86 78       	andi	r24, 0x86	; 134
 93e:	51 f0       	breq	.+20     	; 0x954 <vfprintf+0x35c>
 940:	a1 fe       	sbrs	r10, 1
 942:	02 c0       	rjmp	.+4      	; 0x948 <vfprintf+0x350>
 944:	8b e2       	ldi	r24, 0x2B	; 43
 946:	01 c0       	rjmp	.+2      	; 0x94a <vfprintf+0x352>
 948:	80 e2       	ldi	r24, 0x20	; 32
 94a:	a7 fc       	sbrc	r10, 7
 94c:	8d e2       	ldi	r24, 0x2D	; 45
 94e:	b6 01       	movw	r22, r12
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	3a d0       	rcall	.+116    	; 0x9c8 <fputc>
 954:	89 14       	cp	r8, r9
 956:	30 f4       	brcc	.+12     	; 0x964 <vfprintf+0x36c>
 958:	b6 01       	movw	r22, r12
 95a:	80 e3       	ldi	r24, 0x30	; 48
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	34 d0       	rcall	.+104    	; 0x9c8 <fputc>
 960:	9a 94       	dec	r9
 962:	f8 cf       	rjmp	.-16     	; 0x954 <vfprintf+0x35c>
 964:	8a 94       	dec	r8
 966:	f3 01       	movw	r30, r6
 968:	e8 0d       	add	r30, r8
 96a:	f1 1d       	adc	r31, r1
 96c:	80 81       	ld	r24, Z
 96e:	b6 01       	movw	r22, r12
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	2a d0       	rcall	.+84     	; 0x9c8 <fputc>
 974:	81 10       	cpse	r8, r1
 976:	f6 cf       	rjmp	.-20     	; 0x964 <vfprintf+0x36c>
 978:	22 20       	and	r2, r2
 97a:	09 f4       	brne	.+2      	; 0x97e <vfprintf+0x386>
 97c:	4e ce       	rjmp	.-868    	; 0x61a <vfprintf+0x22>
 97e:	b6 01       	movw	r22, r12
 980:	80 e2       	ldi	r24, 0x20	; 32
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	21 d0       	rcall	.+66     	; 0x9c8 <fputc>
 986:	2a 94       	dec	r2
 988:	f7 cf       	rjmp	.-18     	; 0x978 <vfprintf+0x380>
 98a:	f6 01       	movw	r30, r12
 98c:	86 81       	ldd	r24, Z+6	; 0x06
 98e:	97 81       	ldd	r25, Z+7	; 0x07
 990:	02 c0       	rjmp	.+4      	; 0x996 <vfprintf+0x39e>
 992:	8f ef       	ldi	r24, 0xFF	; 255
 994:	9f ef       	ldi	r25, 0xFF	; 255
 996:	2b 96       	adiw	r28, 0x0b	; 11
 998:	e2 e1       	ldi	r30, 0x12	; 18
 99a:	c9 c0       	rjmp	.+402    	; 0xb2e <__epilogue_restores__>

0000099c <strnlen_P>:
 99c:	fc 01       	movw	r30, r24
 99e:	05 90       	lpm	r0, Z+
 9a0:	61 50       	subi	r22, 0x01	; 1
 9a2:	70 40       	sbci	r23, 0x00	; 0
 9a4:	01 10       	cpse	r0, r1
 9a6:	d8 f7       	brcc	.-10     	; 0x99e <strnlen_P+0x2>
 9a8:	80 95       	com	r24
 9aa:	90 95       	com	r25
 9ac:	8e 0f       	add	r24, r30
 9ae:	9f 1f       	adc	r25, r31
 9b0:	08 95       	ret

000009b2 <strnlen>:
 9b2:	fc 01       	movw	r30, r24
 9b4:	61 50       	subi	r22, 0x01	; 1
 9b6:	70 40       	sbci	r23, 0x00	; 0
 9b8:	01 90       	ld	r0, Z+
 9ba:	01 10       	cpse	r0, r1
 9bc:	d8 f7       	brcc	.-10     	; 0x9b4 <strnlen+0x2>
 9be:	80 95       	com	r24
 9c0:	90 95       	com	r25
 9c2:	8e 0f       	add	r24, r30
 9c4:	9f 1f       	adc	r25, r31
 9c6:	08 95       	ret

000009c8 <fputc>:
 9c8:	0f 93       	push	r16
 9ca:	1f 93       	push	r17
 9cc:	cf 93       	push	r28
 9ce:	df 93       	push	r29
 9d0:	fb 01       	movw	r30, r22
 9d2:	23 81       	ldd	r18, Z+3	; 0x03
 9d4:	21 fd       	sbrc	r18, 1
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <fputc+0x16>
 9d8:	8f ef       	ldi	r24, 0xFF	; 255
 9da:	9f ef       	ldi	r25, 0xFF	; 255
 9dc:	2c c0       	rjmp	.+88     	; 0xa36 <fputc+0x6e>
 9de:	22 ff       	sbrs	r18, 2
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <fputc+0x46>
 9e2:	46 81       	ldd	r20, Z+6	; 0x06
 9e4:	57 81       	ldd	r21, Z+7	; 0x07
 9e6:	24 81       	ldd	r18, Z+4	; 0x04
 9e8:	35 81       	ldd	r19, Z+5	; 0x05
 9ea:	42 17       	cp	r20, r18
 9ec:	53 07       	cpc	r21, r19
 9ee:	44 f4       	brge	.+16     	; 0xa00 <fputc+0x38>
 9f0:	a0 81       	ld	r26, Z
 9f2:	b1 81       	ldd	r27, Z+1	; 0x01
 9f4:	9d 01       	movw	r18, r26
 9f6:	2f 5f       	subi	r18, 0xFF	; 255
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	20 83       	st	Z, r18
 9fc:	31 83       	std	Z+1, r19	; 0x01
 9fe:	8c 93       	st	X, r24
 a00:	26 81       	ldd	r18, Z+6	; 0x06
 a02:	37 81       	ldd	r19, Z+7	; 0x07
 a04:	2f 5f       	subi	r18, 0xFF	; 255
 a06:	3f 4f       	sbci	r19, 0xFF	; 255
 a08:	26 83       	std	Z+6, r18	; 0x06
 a0a:	37 83       	std	Z+7, r19	; 0x07
 a0c:	14 c0       	rjmp	.+40     	; 0xa36 <fputc+0x6e>
 a0e:	8b 01       	movw	r16, r22
 a10:	ec 01       	movw	r28, r24
 a12:	fb 01       	movw	r30, r22
 a14:	00 84       	ldd	r0, Z+8	; 0x08
 a16:	f1 85       	ldd	r31, Z+9	; 0x09
 a18:	e0 2d       	mov	r30, r0
 a1a:	09 95       	icall
 a1c:	89 2b       	or	r24, r25
 a1e:	e1 f6       	brne	.-72     	; 0x9d8 <fputc+0x10>
 a20:	d8 01       	movw	r26, r16
 a22:	16 96       	adiw	r26, 0x06	; 6
 a24:	8d 91       	ld	r24, X+
 a26:	9c 91       	ld	r25, X
 a28:	17 97       	sbiw	r26, 0x07	; 7
 a2a:	01 96       	adiw	r24, 0x01	; 1
 a2c:	16 96       	adiw	r26, 0x06	; 6
 a2e:	8d 93       	st	X+, r24
 a30:	9c 93       	st	X, r25
 a32:	17 97       	sbiw	r26, 0x07	; 7
 a34:	ce 01       	movw	r24, r28
 a36:	df 91       	pop	r29
 a38:	cf 91       	pop	r28
 a3a:	1f 91       	pop	r17
 a3c:	0f 91       	pop	r16
 a3e:	08 95       	ret

00000a40 <__ultoa_invert>:
 a40:	fa 01       	movw	r30, r20
 a42:	aa 27       	eor	r26, r26
 a44:	28 30       	cpi	r18, 0x08	; 8
 a46:	51 f1       	breq	.+84     	; 0xa9c <__ultoa_invert+0x5c>
 a48:	20 31       	cpi	r18, 0x10	; 16
 a4a:	81 f1       	breq	.+96     	; 0xaac <__ultoa_invert+0x6c>
 a4c:	e8 94       	clt
 a4e:	6f 93       	push	r22
 a50:	6e 7f       	andi	r22, 0xFE	; 254
 a52:	6e 5f       	subi	r22, 0xFE	; 254
 a54:	7f 4f       	sbci	r23, 0xFF	; 255
 a56:	8f 4f       	sbci	r24, 0xFF	; 255
 a58:	9f 4f       	sbci	r25, 0xFF	; 255
 a5a:	af 4f       	sbci	r26, 0xFF	; 255
 a5c:	b1 e0       	ldi	r27, 0x01	; 1
 a5e:	3e d0       	rcall	.+124    	; 0xadc <__ultoa_invert+0x9c>
 a60:	b4 e0       	ldi	r27, 0x04	; 4
 a62:	3c d0       	rcall	.+120    	; 0xadc <__ultoa_invert+0x9c>
 a64:	67 0f       	add	r22, r23
 a66:	78 1f       	adc	r23, r24
 a68:	89 1f       	adc	r24, r25
 a6a:	9a 1f       	adc	r25, r26
 a6c:	a1 1d       	adc	r26, r1
 a6e:	68 0f       	add	r22, r24
 a70:	79 1f       	adc	r23, r25
 a72:	8a 1f       	adc	r24, r26
 a74:	91 1d       	adc	r25, r1
 a76:	a1 1d       	adc	r26, r1
 a78:	6a 0f       	add	r22, r26
 a7a:	71 1d       	adc	r23, r1
 a7c:	81 1d       	adc	r24, r1
 a7e:	91 1d       	adc	r25, r1
 a80:	a1 1d       	adc	r26, r1
 a82:	20 d0       	rcall	.+64     	; 0xac4 <__ultoa_invert+0x84>
 a84:	09 f4       	brne	.+2      	; 0xa88 <__ultoa_invert+0x48>
 a86:	68 94       	set
 a88:	3f 91       	pop	r19
 a8a:	2a e0       	ldi	r18, 0x0A	; 10
 a8c:	26 9f       	mul	r18, r22
 a8e:	11 24       	eor	r1, r1
 a90:	30 19       	sub	r19, r0
 a92:	30 5d       	subi	r19, 0xD0	; 208
 a94:	31 93       	st	Z+, r19
 a96:	de f6       	brtc	.-74     	; 0xa4e <__ultoa_invert+0xe>
 a98:	cf 01       	movw	r24, r30
 a9a:	08 95       	ret
 a9c:	46 2f       	mov	r20, r22
 a9e:	47 70       	andi	r20, 0x07	; 7
 aa0:	40 5d       	subi	r20, 0xD0	; 208
 aa2:	41 93       	st	Z+, r20
 aa4:	b3 e0       	ldi	r27, 0x03	; 3
 aa6:	0f d0       	rcall	.+30     	; 0xac6 <__ultoa_invert+0x86>
 aa8:	c9 f7       	brne	.-14     	; 0xa9c <__ultoa_invert+0x5c>
 aaa:	f6 cf       	rjmp	.-20     	; 0xa98 <__ultoa_invert+0x58>
 aac:	46 2f       	mov	r20, r22
 aae:	4f 70       	andi	r20, 0x0F	; 15
 ab0:	40 5d       	subi	r20, 0xD0	; 208
 ab2:	4a 33       	cpi	r20, 0x3A	; 58
 ab4:	18 f0       	brcs	.+6      	; 0xabc <__ultoa_invert+0x7c>
 ab6:	49 5d       	subi	r20, 0xD9	; 217
 ab8:	31 fd       	sbrc	r19, 1
 aba:	40 52       	subi	r20, 0x20	; 32
 abc:	41 93       	st	Z+, r20
 abe:	02 d0       	rcall	.+4      	; 0xac4 <__ultoa_invert+0x84>
 ac0:	a9 f7       	brne	.-22     	; 0xaac <__ultoa_invert+0x6c>
 ac2:	ea cf       	rjmp	.-44     	; 0xa98 <__ultoa_invert+0x58>
 ac4:	b4 e0       	ldi	r27, 0x04	; 4
 ac6:	a6 95       	lsr	r26
 ac8:	97 95       	ror	r25
 aca:	87 95       	ror	r24
 acc:	77 95       	ror	r23
 ace:	67 95       	ror	r22
 ad0:	ba 95       	dec	r27
 ad2:	c9 f7       	brne	.-14     	; 0xac6 <__ultoa_invert+0x86>
 ad4:	00 97       	sbiw	r24, 0x00	; 0
 ad6:	61 05       	cpc	r22, r1
 ad8:	71 05       	cpc	r23, r1
 ada:	08 95       	ret
 adc:	9b 01       	movw	r18, r22
 ade:	ac 01       	movw	r20, r24
 ae0:	0a 2e       	mov	r0, r26
 ae2:	06 94       	lsr	r0
 ae4:	57 95       	ror	r21
 ae6:	47 95       	ror	r20
 ae8:	37 95       	ror	r19
 aea:	27 95       	ror	r18
 aec:	ba 95       	dec	r27
 aee:	c9 f7       	brne	.-14     	; 0xae2 <__ultoa_invert+0xa2>
 af0:	62 0f       	add	r22, r18
 af2:	73 1f       	adc	r23, r19
 af4:	84 1f       	adc	r24, r20
 af6:	95 1f       	adc	r25, r21
 af8:	a0 1d       	adc	r26, r0
 afa:	08 95       	ret

00000afc <__prologue_saves__>:
 afc:	2f 92       	push	r2
 afe:	3f 92       	push	r3
 b00:	4f 92       	push	r4
 b02:	5f 92       	push	r5
 b04:	6f 92       	push	r6
 b06:	7f 92       	push	r7
 b08:	8f 92       	push	r8
 b0a:	9f 92       	push	r9
 b0c:	af 92       	push	r10
 b0e:	bf 92       	push	r11
 b10:	cf 92       	push	r12
 b12:	df 92       	push	r13
 b14:	ef 92       	push	r14
 b16:	ff 92       	push	r15
 b18:	0f 93       	push	r16
 b1a:	1f 93       	push	r17
 b1c:	cf 93       	push	r28
 b1e:	df 93       	push	r29
 b20:	cd b7       	in	r28, 0x3d	; 61
 b22:	de b7       	in	r29, 0x3e	; 62
 b24:	ca 1b       	sub	r28, r26
 b26:	db 0b       	sbc	r29, r27
 b28:	cd bf       	out	0x3d, r28	; 61
 b2a:	de bf       	out	0x3e, r29	; 62
 b2c:	09 94       	ijmp

00000b2e <__epilogue_restores__>:
 b2e:	2a 88       	ldd	r2, Y+18	; 0x12
 b30:	39 88       	ldd	r3, Y+17	; 0x11
 b32:	48 88       	ldd	r4, Y+16	; 0x10
 b34:	5f 84       	ldd	r5, Y+15	; 0x0f
 b36:	6e 84       	ldd	r6, Y+14	; 0x0e
 b38:	7d 84       	ldd	r7, Y+13	; 0x0d
 b3a:	8c 84       	ldd	r8, Y+12	; 0x0c
 b3c:	9b 84       	ldd	r9, Y+11	; 0x0b
 b3e:	aa 84       	ldd	r10, Y+10	; 0x0a
 b40:	b9 84       	ldd	r11, Y+9	; 0x09
 b42:	c8 84       	ldd	r12, Y+8	; 0x08
 b44:	df 80       	ldd	r13, Y+7	; 0x07
 b46:	ee 80       	ldd	r14, Y+6	; 0x06
 b48:	fd 80       	ldd	r15, Y+5	; 0x05
 b4a:	0c 81       	ldd	r16, Y+4	; 0x04
 b4c:	1b 81       	ldd	r17, Y+3	; 0x03
 b4e:	aa 81       	ldd	r26, Y+2	; 0x02
 b50:	b9 81       	ldd	r27, Y+1	; 0x01
 b52:	ce 0f       	add	r28, r30
 b54:	d1 1d       	adc	r29, r1
 b56:	cd bf       	out	0x3d, r28	; 61
 b58:	de bf       	out	0x3e, r29	; 62
 b5a:	ed 01       	movw	r28, r26
 b5c:	08 95       	ret

00000b5e <_exit>:
 b5e:	f8 94       	cli

00000b60 <__stop_program>:
 b60:	ff cf       	rjmp	.-2      	; 0xb60 <__stop_program>
